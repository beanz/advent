package main

import (
	"github.com/stretchr/testify/assert"
	"testing"
	intcode "github.com/beanz/advent/lib-go/intcode"
)

func ExampleMain() {
	main()
	//Output:
	// Part 1: 16209841
	// Part 2: 8834787
}

type TestCase struct {
	prog []int64
	in   int64
	out  int64
}

func TestPlay(t *testing.T) {
	tests := []TestCase{
		{[]int64{3, 9, 8, 9, 10, 9, 4, 9, 99, -1, 8}, 8, 1},
		{[]int64{3, 9, 8, 9, 10, 9, 4, 9, 99, -1, 8}, 4, 0},
		{[]int64{3, 9, 7, 9, 10, 9, 4, 9, 99, -1, 8}, 7, 1},
		{[]int64{3, 9, 7, 9, 10, 9, 4, 9, 99, -1, 8}, 8, 0},
		{[]int64{3, 3, 1108, -1, 8, 3, 4, 3, 99}, 8, 1},
		{[]int64{3, 3, 1108, -1, 8, 3, 4, 3, 99}, 9, 0},
		{[]int64{3, 3, 1107, -1, 8, 3, 4, 3, 99}, 7, 1},
		{[]int64{3, 3, 1107, -1, 8, 3, 4, 3, 99}, 9, 0},
		{[]int64{3, 12, 6, 12, 15, 1, 13, 14, 13, 4, 13, 99, -1, 0, 1, 9}, 2, 1},
		{[]int64{3, 12, 6, 12, 15, 1, 13, 14, 13, 4, 13, 99, -1, 0, 1, 9}, 0, 0},
		{[]int64{3, 3, 1105, -1, 9, 1101, 0, 0, 12, 4, 12, 99, 1}, 3, 1},
		{[]int64{3, 3, 1105, -1, 9, 1101, 0, 0, 12, 4, 12, 99, 1}, 0, 0},
		{[]int64{3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006,
			20, 31, 1106, 0, 36, 98, 0, 0, 1002, 21, 125, 20, 4, 20, 1105,
			1, 46, 104, 999, 1105, 1, 46, 1101, 1000, 1, 20, 4, 20, 1105,
			1, 46, 98, 99}, 5, 999},
		{[]int64{3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006,
			20, 31, 1106, 0, 36, 98, 0, 0, 1002, 21, 125, 20, 4, 20, 1105,
			1, 46, 104, 999, 1105, 1, 46, 1101, 1000, 1, 20, 4, 20, 1105,
			1, 46, 98, 99}, 8, 1000},
		{[]int64{3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006,
			20, 31, 1106, 0, 36, 98, 0, 0, 1002, 21, 125, 20, 4, 20, 1105,
			1, 46, 104, 999, 1105, 1, 46, 1101, 1000, 1, 20, 4, 20, 1105,
			1, 46, 98, 99}, 9, 1001},
	}
	for _, tc := range tests {
		g := intcode.NewIntCode(tc.prog, []int64{tc.in})
		g.Run()
		assert.Equal(t, tc.out, g.Out(1)[0])
	}
}

func BenchmarkMain(b *testing.B) {
	benchmark = true
	for i := 0; i < b.N; i++ {
		main()
	}
}
